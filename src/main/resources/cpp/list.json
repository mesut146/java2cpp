{
  "name": "java.util.List<T>,java.util.ArrayList<T>",
  "target": "std::vector",
  "include": "CppHelper.h",
  "methods": [
    {
      "name": "add(<T>)",
      "target": "push_back($1)"
    },
    {
      "name": "add(int,<T>)",
      "target": "insert($1, $2)"
    },
    {
      "name": "addAll(java.util.Collection)",
      "target": "insert(${varName}->end(), $1->begin(), $1->end())"
    },
    {
      "name": "addAll(int,java.util.Collection)",
      "target": "insert($1, $2->begin(), $2->end())"
    },
    {
      "name": "get(int)",
      "target": "at($1)"
    },
    {
      "name": "set(int,<T>)",
      "target": "(${varName}->at($1) = $2)",
      "external": true
    },
    {
      "name": "remove(int)",
      "target": "erase(${varName}->begin() + $1)"
    },
    {
      "name": "remove(<T>)",
      "target": "erase(std::find(${varName}->begin(),${varName}->end(), $1));",
      "include": "<algorithm>"
    },
    {
      "name": "indexOf(<T>)",
      "target": "std::find(${varName}->begin(), ${varName}->end(), $1) - ${varName}->begin()",
      "external": true,
      "include": "<algorithm>"
    },
    {
      "name": "size()",
      "target": "size()"
    },
    {
      "name": "isEmpty()",
      "target": "empty()"
    },
    {
      "name": "clear()",
      "target": "clear()"
    },
    {
      "name": "contains(java.lang.Object)",
      "target": "(${varName}->find($1) != ${varName}->end())",
      "external": true
    },
    {
      "name": "toArray()",
      "target": "new std::vector<T>(${varName}->begin(), ${varName}->end())",
      "external": true
    }
  ]
}